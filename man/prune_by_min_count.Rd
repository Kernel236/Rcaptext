% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pruning.R
\name{prune_by_min_count}
\alias{prune_by_min_count}
\title{Prune n-grams by minimum count threshold}
\usage{
prune_by_min_count(tbl, min_count = 2)
}
\arguments{
\item{tbl}{A data frame containing n-gram frequency data with required column:
\itemize{
  \item \code{n}: Frequency count of the n-gram (numeric)
}
All other columns are preserved in the output.}

\item{min_count}{Integer. Minimum frequency count threshold (default: 2).
N-grams with count < min_count are removed from the dataset.}
}
\value{
A data frame identical to the input but filtered to include only
  n-grams with frequency count >= min_count. The structure and column names
  are preserved.
}
\description{
Removes n-grams with frequency counts below a specified threshold to reduce noise
from rare events and decrease model size. This is a common preprocessing step
in language modeling to focus on more reliable, frequently occurring patterns.
}
\examples{
# Create sample n-gram data with varying frequencies
ngrams <- data.frame(
  word1 = c("the", "a", "an", "this", "that"),
  word2 = c("cat", "dog", "apple", "book", "car"),
  n = c(15, 8, 1, 25, 2)
)

# Remove rare n-grams (count < 3)
filtered <- prune_by_min_count(ngrams, min_count = 3)
print(filtered)
# Only keeps "the cat" (n=15), "a dog" (n=8), and "this book" (n=25)

# More conservative filtering (count < 10)
conservative <- prune_by_min_count(ngrams, min_count = 10)
print(conservative)
# Only keeps "the cat" (n=15) and "this book" (n=25)

}
