% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/language_modeling.R
\name{build_cond_trigram}
\alias{build_cond_trigram}
\title{Build conditional probabilities for trigrams}
\usage{
build_cond_trigram(freq_tri)
}
\arguments{
\item{freq_tri}{A data frame containing trigram frequencies with required columns:
\itemize{
  \item \code{w1}: First word of the trigram (character)
  \item \code{w2}: Second word of the trigram (character)
  \item \code{w3}: Third word of the trigram (character)
  \item \code{n}: Frequency count of the trigram (numeric)
}
Optional columns like \code{p} (probability) are preserved if present.}
}
\value{
A data frame identical to the input but with an additional column:
  \itemize{
    \item \code{p_cond}: Conditional probability P(w3 | w1, w2) (numeric)
  }
  The conditional probability is calculated as n / sum(n) for each (w1, w2) pair.
}
\description{
Computes conditional probabilities P(w3 | w1, w2) using Maximum Likelihood Estimation (MLE)
from trigram frequency data. This enables more sophisticated language models that can
predict the next word given the previous two words.
}
\examples{
# Create sample trigram data
trigrams <- data.frame(
  w1 = c("the", "the", "a", "a"),
  w2 = c("big", "big", "small", "small"),
  w3 = c("cat", "dog", "cat", "bird"),
  n = c(8, 4, 2, 1)
)

# Calculate conditional probabilities
result <- build_cond_trigram(trigrams)
print(result)
# Shows P(cat|the,big) = 8/12 = 0.67, P(dog|the,big) = 4/12 = 0.33, etc.

}
